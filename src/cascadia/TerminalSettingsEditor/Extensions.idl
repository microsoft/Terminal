// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.

import "ColorSchemesPageViewModel.idl";

namespace Microsoft.Terminal.Settings.Editor
{
    [default_interface] runtimeclass Extensions : Windows.UI.Xaml.Controls.Page
    {
        Extensions();
        ExtensionsViewModel ViewModel { get; };
    }

    [default_interface] runtimeclass ExtensionsViewModel : Windows.UI.Xaml.Data.INotifyPropertyChanged
    {
        // Properties
        // TODO CARLOS: Replace "CurrentExtensionX" by just exposing them off of FragmentExtensionViewModel
        FragmentExtensionViewModel CurrentExtension;
        String CurrentExtensionSource { get; };
        String CurrentExtensionJson { get; };
        String CurrentExtensionScope { get; };
        Boolean IsExtensionView { get; };
        Boolean NoActiveExtensions { get; };
        Boolean NoProfilesModified { get; };
        Boolean NoProfilesAdded { get; };
        Boolean NoSchemesAdded { get; };

        // Views
        Windows.Foundation.Collections.IVectorView<FragmentExtensionViewModel> FragmentExtensions { get; };
        Windows.Foundation.Collections.IObservableVector<FragmentProfileViewModel> ProfilesModified { get; };
        Windows.Foundation.Collections.IObservableVector<FragmentProfileViewModel> ProfilesAdded { get; };
        Windows.Foundation.Collections.IObservableVector<FragmentColorSchemeViewModel> ColorSchemesAdded { get; };

        // Methods
        void UpdateSettings(Microsoft.Terminal.Settings.Model.CascadiaSettings settings, ColorSchemesPageViewModel colorSchemesPageVM);
        Boolean GetExtensionState(String extensionSource);
        void SetExtensionState(String extensionSource, Boolean enableExt);

        event Windows.Foundation.TypedEventHandler<Object, Guid> NavigateToProfileRequested;
        event Windows.Foundation.TypedEventHandler<Object, ColorSchemeViewModel> NavigateToColorSchemeRequested;
    }

    [default_interface] runtimeclass FragmentExtensionViewModel : Windows.UI.Xaml.Data.INotifyPropertyChanged
    {
        Microsoft.Terminal.Settings.Model.FragmentSettings Fragment { get; };
        Windows.Foundation.Collections.IVectorView<FragmentProfileViewModel> ProfilesModified { get; };
        Windows.Foundation.Collections.IVectorView<FragmentProfileViewModel> ProfilesAdded { get; };
        Windows.Foundation.Collections.IVectorView<FragmentColorSchemeViewModel> ColorSchemesAdded { get; };

        // TODO CARLOS: JSON should be an IVector (requires settings model changes)
        String Json { get; };
    }

    [default_interface] runtimeclass FragmentProfileViewModel : Windows.UI.Xaml.Data.INotifyPropertyChanged
    {
        Microsoft.Terminal.Settings.Model.Profile Profile { get; };
        String SourceName { get; };
        String Json { get; };
    }

    [default_interface] runtimeclass FragmentColorSchemeViewModel : Windows.UI.Xaml.Data.INotifyPropertyChanged
    {
        ColorSchemeViewModel ColorSchemeVM { get; };
        String SourceName { get; };
        String Json { get; };
    }
}
